

class Solution:
    def maxArea(self, height: List[int]) -> int:
        max_area = 0
        left = 0
        right = len(height) - 1

        while left < right:
            area = min(height[left], height[right]) * (right - left)
            max_area = area if area > max_area else max_area

            if height[left] < height[right]:
                left += 1
            else:
                right -= 1
        return max_area
        

超时了，哭唧唧
class Solution(object):
    def maxArea(self, height):
        global_max_area = 0
        for index in range(len(height)):
            one_max_area = self.one_max_area(height, index, index + 1)
            if one_max_area > global_max_area:
                global_max_area = one_max_area
        return global_max_area


    def one_max_area(self, height, left, right):
        one_max_area = 0
        while right < len(height):
            area = min(height[left], height[right]) * (right - left)
            right += 1
            if area > one_max_area:
                one_max_area = area
        return one_max_area


height = [1, 8, 6, 2, 5, 4, 8, 3, 7]
s = Solution()
print(s.maxArea(height))
