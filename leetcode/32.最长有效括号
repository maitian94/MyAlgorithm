# 给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号子串的长度。 
# 
#  
# 
#  
#  
#  示例 1： 
# 
#  
# 输入：s = "(()"
# 输出：2
# 解释：最长有效括号子串是 "()"
#  
# 
#  示例 2： 
# 
#  
# 输入：s = ")()())"
# 输出：4
# 解释：最长有效括号子串是 "()()"
#  
# 
#  示例 3： 
# 
#  
# 输入：s = ""
# 输出：0
#  
# 
#  
# 
#  提示： 
# 
#  
#  0 <= s.length <= 3 * 104 
#  s[i] 为 '(' 或 ')' 
#  
#  
#  
#  Related Topics 栈 字符串 动态规划 
#  👍 2018 👎 0


# leetcode submit region begin(Prohibit modification and deletion)
class Solution:
    def longestValidParentheses(self, s: str):
        if not s:
            return 0
        result = 0
        temp_li = []
        for st in s:
            if st == '(':
                temp_li.append(st)
                result += 1
                continue
            if temp_li:
                if st == ')' and temp_li.pop() == '(':
                    result += 1
        if not temp_li:
            return result
        else:
            return result - len(temp_li)



# leetcode submit region end(Prohibit modification and deletion)


s = Solution()
print(s.longestValidParentheses(s=")()())"))
# print(s.longestValidParentheses(s="(()"))
