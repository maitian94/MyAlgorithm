# -*- coding: utf-8 -*-
# @Time : 2022/9/20 16:20


class Solution:
    def longestPalindrome(self, s: str) -> str:
        longest_palindrome = ''
        for index in range(len(s)):
            result1 = self.get_longest_palindrome(s, index, index + 1)
            len1 = len(result1)
            if len1 > len(longest_palindrome):
                longest_palindrome = result1
            result2 = self.get_longest_palindrome(s, index, index)
            len2 = len(result2)
            if len2 > len(longest_palindrome):
                longest_palindrome = result2
        if not longest_palindrome:
            return s[0]
        return longest_palindrome


    def get_longest_palindrome(self, s, left, right):
        while left >= 0 and right < len(s) and s[left] == s[right]:
            left -= 1
            right += 1
        return s[left+1:right]

s = Solution()
print(s.longestPalindrome('bacd'))




