# -*- coding: utf-8 -*-
# @Time : 2022/9/20 16:20


class Solution:
    def longestPalindrome(self, s: str) -> str:
        length = 1
        longest_palindrome = ''
        for index in range(len(s)):
            if len(s) % 2 == 0:
                result = self.get_longest_palindrome(s, index, index)
                length = len(result)
                if length > len(longest_palindrome):
                    longest_palindrome = result
            else:
                result = self.get_longest_palindrome(s, index, index + 1)
                length = len(result)
                if length > len(longest_palindrome):
                    longest_palindrome = result
        return len(longest_palindrome)


    def get_longest_palindrome(self, s, left, right):
        while left >= 0 and right < len(s) and s[left] == s[right]:
            left -= 1
            right += 1
        return s[left+1:right]

s = Solution()
print(s.longestPalindrome('bacd'))




